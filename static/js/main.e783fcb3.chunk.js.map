{"version":3,"sources":["components/Tabs/Tabs.tsx","App.tsx","index.tsx"],"names":["Tabs","tabs","selectedTabId","onTabSelected","findSelectedTab","find","tab","id","selectedTab","undefined","className","map","isSelected","classNames","href","onClick","title","content","App","useState","setSelectedTab","tabData","ReactDOM","render","document","getElementById"],"mappings":"4MASaA,EAAwB,SAAC,GAI/B,IAHLC,EAGI,EAHJA,KACAC,EAEI,EAFJA,cACAC,EACI,EADJA,cAEMC,EAAkBH,EAAKI,MAAK,SAAAC,GAAG,OAAIA,EAAIC,KAAOL,KAE9CM,OAAkCC,IAApBL,EAChBA,EACAH,EAAK,GAET,OACE,sBAAK,UAAQ,gBAAb,UACE,qBAAKS,UAAU,gBAAf,SACE,6BACGT,EAAKU,KAAI,SAAAL,GACR,IAAMM,EAAaJ,EAAYD,KAAOD,EAAIC,GAE1C,OACE,oBAEEG,UAAWG,IAAW,CAAE,YAAaD,IACrC,UAAQ,MAHV,SAKE,mBACEE,KAAI,WAAMR,EAAIC,IACd,UAAQ,UACRQ,QAAS,kBAAOH,GAAcT,EAAcG,IAH9C,SAKGA,EAAIU,SATFV,EAAIC,WAiBnB,qBAAKG,UAAU,QAAQ,UAAQ,aAA/B,SACGF,EAAYS,cCxCRhB,G,MAAc,CACzB,CAAEM,GAAI,QAASS,MAAO,QAASC,QAAS,eACxC,CAAEV,GAAI,QAASS,MAAO,QAASC,QAAS,eACxC,CAAEV,GAAI,QAASS,MAAO,QAASC,QAAS,iBAG7BC,EAAgB,WAC3B,MAAsCC,mBAASlB,EAAK,IAApD,mBAAOO,EAAP,KAAoBY,EAApB,KAYA,OACE,sBAAKV,UAAU,UAAf,UACE,qBAAIA,UAAU,QAAd,UACG,mBACAF,EAAYQ,SAGf,cAAC,EAAD,CACEf,KAAMA,EACNC,cAAeM,EAAYD,GAC3BJ,cApBgB,SAACkB,GAOrB,OALED,EADEC,GAGapB,EAAK,IAGfoB,SCpBXC,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.e783fcb3.chunk.js","sourcesContent":["import classNames from 'classnames';\nimport { Tab } from '../../types/Tab';\n\ninterface Props {\n  tabs: Tab[],\n  selectedTabId : string,\n  onTabSelected: (tabData: Tab) => Tab,\n}\n\nexport const Tabs: React.FC<Props> = ({\n  tabs,\n  selectedTabId,\n  onTabSelected,\n}) => {\n  const findSelectedTab = tabs.find(tab => tab.id === selectedTabId);\n\n  const selectedTab = findSelectedTab !== undefined\n    ? findSelectedTab\n    : tabs[0];\n\n  return (\n    <div data-cy=\"TabsComponent\">\n      <div className=\"tabs is-boxed\">\n        <ul>\n          {tabs.map(tab => {\n            const isSelected = selectedTab.id === tab.id;\n\n            return (\n              <li\n                key={tab.id}\n                className={classNames({ 'is-active': isSelected })}\n                data-cy=\"Tab\"\n              >\n                <a\n                  href={`#${tab.id}`}\n                  data-cy=\"TabLink\"\n                  onClick={() => !isSelected && onTabSelected(tab)}\n                >\n                  {tab.title}\n                </a>\n              </li>\n            );\n          })}\n        </ul>\n      </div>\n\n      <div className=\"block\" data-cy=\"TabContent\">\n        {selectedTab.content}\n      </div>\n    </div>\n  );\n};\n","import React, { useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\nimport { Tabs } from './components/Tabs/Tabs';\nimport { Tab } from './types/Tab';\nimport './App.scss';\n\nexport const tabs: Tab[] = [\n  { id: 'tab-1', title: 'Tab 1', content: 'Some text 1' },\n  { id: 'tab-2', title: 'Tab 2', content: 'Some text 2' },\n  { id: 'tab-3', title: 'Tab 3', content: 'Some text 3' },\n];\n\nexport const App: React.FC = () => {\n  const [selectedTab, setSelectedTab] = useState(tabs[0]);\n\n  const onTabSelected = (tabData: Tab) => {\n    if (tabData) {\n      setSelectedTab(tabData);\n    } else {\n      setSelectedTab(tabs[0]);\n    }\n\n    return tabData;\n  };\n\n  return (\n    <div className=\"section\">\n      <h1 className=\"title\">\n        {'Selected tab is '}\n        {selectedTab.title}\n      </h1>\n\n      <Tabs\n        tabs={tabs}\n        selectedTabId={selectedTab.id}\n        onTabSelected={onTabSelected}\n      />\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}